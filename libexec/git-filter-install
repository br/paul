#!/bin/bash

#/ NAME
#/     filter -- runs a git filter, as in https://gist.github.com/3430823
#/
#/ SYNOPSIS
#/     filter type stage secrets

# figure out the project root under which bin, lib live
shome="$(unset CDPATH; cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/libexec/_jason"

# entry point
function main {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing filter"
    exit 1
  fi

  if [[ "$#" < 2 ]]; then
    logger_fatal "missing secrets location"
    exit 1
  fi

  local filter="$1"; shift
  local secrets="$1"; shift

  if [[ ! -r "$secrets/pass" ]]; then
    logger_fatal "could not read any secrets in $secrets"
    exit 1
  fi

  local git_initialized=
  if [[ ! -d ".git" ]]; then
    git init
    git_initialized=1
  fi

  local pth_origin="$(unset CDPATH; cd -P -- "./$(git rev-parse --show-cdup)" && pwd -P)"

  if [[ ! -r "$secrets/salt" ]]; then
    for a in {1..8}; do printf '%x' $(($RANDOM % 16)); done > "$secrets/salt"
  fi

  ln -nfs "$secrets" "$pth_origin/.secrets"

  git config --local diff.$filter.textconv "git filter $filter textconv"
  git config --local filter.$filter.smudge "git filter $filter smudge"
  git config --local filter.$filter.clean  "git filter $filter clean"
  git config --local filter.$filter.required true

  echo "* filter=$filter diff=$filter" > "$pth_origin/.gitattributes"

    cat >> "$pth_origin/.gitignore" << EOF
/.gitattributes
/.secrets
EOF

  if [[ -n "$git_initialized" ]]; then
    git add .gitignore
    git commit -m 'new project, protected by secrets'
  fi
}

require sub "$BASH_SOURCE" "$@"


