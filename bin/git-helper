#!/bin/bash

#/ NAME
#/     git-helper -- set up git remotes for helper mixins
#/
#/ SYNOPSIS
#/     git helper [helper_id]
#/       where helper_id is
#/          sh - jason bourne again shell library
#/          ao - alpha_omega deploy commands
#/          rb - rubygems development
#/         tvd - microwave tvdinners

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a jason library
source "$shome/libexec_jason" "$@"

# entry point
function main {
  local nm_helper="$1"; shift

  case "$nm_helper" in
    sh)
      git remote rm sh 2>&1 > /dev/null || true
      git remote add sh https://github.com/destructuring/jason
      git config remote.sh.tagopt --no-tags
      git fetch sh

      ;;
    ao)
      git remote rm ao 2>&1 > /dev/null || true
      git remote add ao https://github.com/destructuring/ao-helper
      git config remote.ao.tagopt --no-tags
      git fetch ao
      ;;
    rb)
      git remote rm rb 2>&1 > /dev/null || true
      git remote add rb https://github.com/destructuring/rb-helper
      git config remote.rb.tagopt --no-tags
      git fetch rb
      ;;
    doc)
      git remote rm doc 2>&1 > /dev/null || true
      git remote add doc https://github.com/destructuring/doc-helper
      git config remote.doc.tagopt --no-tags
      git fetch doc
      ;;
    tvd)
      git remote rm tvd 2>&1 > /dev/null || true
      git remote add tvd https://github.com/destructuring/tvdinner
      git config remote.tvd.tagopt --no-tags
      git fetch tvd
      ;;
    *)
      logger_fatal "unknown helper $nm_helper"
      exit 1
      ;;
  esac
}

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"
if [[ "$#" = 0 ]]; then
  logger_fatal "must specify a helper_id"
  display_help
  exit 4
fi

# pass arguments to entry point
main "$@"
