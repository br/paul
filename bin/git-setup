#!/bin/bash

#/ NAME
#/     git setup -- sets up a git repo from configuration
#/
#/ SYNOPSIS
#/     git setup

# figure out the project root under which bin, lib live
shome="$(unset CDPATH; cd -P -- "$(dirname -- "$0")/.." && pwd -P)"
ghome="$(unset CDPATH; cd -P -- "./$(git rev-parse --show-cdup)" && pwd -P)"

# load a meat library
source "$shome/libexec/_jason"
require paul

# entry point
function main {
  cd $ghome

  if [[ ! -f "$ghome/.gitsetup.yml" ]]; then
    logger_fatal "missing .gitsetup.yml"
    exit 1
  fi

  setup_remotes
}

function setup_remotes {
  local nm_remote
  for nm_remote in $(ryaml $ghome/.gitsetup.yml remotes | grep : | cut -d: -f1); do
    local url=$(ryaml $ghome/.gitsetup.yml remotes $nm_remote)
    local nm_local="$(git remote | awk -v repo=$nm_remote '$1 == repo { print $1 }')"
    local url_local=
    if [[ -n "$nm_local" ]]; then
      url_local="$({ git remote show $nm_remote 2>&- || true; } | grep 'Fetch URL:' | cut -d: -f2- | awk '{print $1}')"
    fi

    if [[ -z "$nm_local" ]]; then
      gut remote add $nm_remote $url
    else
      if [[ "$url_local" != "$url" ]]; then
        gut remote remove $nm_remote
        gut remote add $nm_remote $url
      fi
    fi

    case "$nm_remote" in
      primary|secondary)
        true
        ;;
      *)
        gut config remote.$nm_remote.tagopt --no-tags
        ;;
    esac

    if [[ -z "$nm_local" ]]; then
      gut fetch $nm_remote
    fi
  done

  gut origin primary
}

main "$@"
